/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculator_demo;

import java.io.ByteArrayOutputStream;
import java.util.Stack;

/**
 *
 * @author zerof
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
        jRadioOn.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        powerSwitch = new javax.swing.ButtonGroup();
        textField = new javax.swing.JTextField();
        jRadioOn = new javax.swing.JRadioButton();
        jRadioOff = new javax.swing.JRadioButton();
        jBtnPlus = new javax.swing.JButton();
        jBtnC = new javax.swing.JButton();
        jBtnPrev = new javax.swing.JButton();
        jNum2 = new javax.swing.JButton();
        jNum3 = new javax.swing.JButton();
        jNum1 = new javax.swing.JButton();
        jBtnDas = new javax.swing.JButton();
        jNum4 = new javax.swing.JButton();
        jNum5 = new javax.swing.JButton();
        jNum6 = new javax.swing.JButton();
        jBtnStar = new javax.swing.JButton();
        jNum7 = new javax.swing.JButton();
        jNum8 = new javax.swing.JButton();
        jNum9 = new javax.swing.JButton();
        jBtnSlash = new javax.swing.JButton();
        jNum0 = new javax.swing.JButton();
        jBtnDot = new javax.swing.JButton();
        jBtnEquals = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");
        setLocation(new java.awt.Point(500, 250));
        setResizable(false);
        setType(java.awt.Window.Type.UTILITY);

        textField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        textField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });

        powerSwitch.add(jRadioOn);
        jRadioOn.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jRadioOn.setText("ON");
        jRadioOn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioOnActionPerformed(evt);
            }
        });

        powerSwitch.add(jRadioOff);
        jRadioOff.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jRadioOff.setText("OFF");
        jRadioOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioOffActionPerformed(evt);
            }
        });

        jBtnPlus.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnPlus.setText("+");
        jBtnPlus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPlusActionPerformed(evt);
            }
        });

        jBtnC.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnC.setText("C");
        jBtnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCActionPerformed(evt);
            }
        });

        jBtnPrev.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnPrev.setText("<--");
        jBtnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPrevActionPerformed(evt);
            }
        });

        jNum2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum2.setText("2");
        jNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum2ActionPerformed(evt);
            }
        });

        jNum3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum3.setText("3");
        jNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum3ActionPerformed(evt);
            }
        });

        jNum1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum1.setText("1");
        jNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum1ActionPerformed(evt);
            }
        });

        jBtnDas.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnDas.setText("-");
        jBtnDas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDasActionPerformed(evt);
            }
        });

        jNum4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum4.setText("4");
        jNum4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum4ActionPerformed(evt);
            }
        });

        jNum5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum5.setText("5");
        jNum5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum5ActionPerformed(evt);
            }
        });

        jNum6.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum6.setText("6");
        jNum6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum6ActionPerformed(evt);
            }
        });

        jBtnStar.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnStar.setText("*");
        jBtnStar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnStarActionPerformed(evt);
            }
        });

        jNum7.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum7.setText("7");
        jNum7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum7ActionPerformed(evt);
            }
        });

        jNum8.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum8.setText("8");
        jNum8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum8ActionPerformed(evt);
            }
        });

        jNum9.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum9.setText("9");
        jNum9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum9ActionPerformed(evt);
            }
        });

        jBtnSlash.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnSlash.setText("/");
        jBtnSlash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSlashActionPerformed(evt);
            }
        });

        jNum0.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jNum0.setText("0");
        jNum0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNum0ActionPerformed(evt);
            }
        });

        jBtnDot.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnDot.setText(".");
        jBtnDot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDotActionPerformed(evt);
            }
        });

        jBtnEquals.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jBtnEquals.setText("=");
        jBtnEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEqualsActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 51, 255));
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnSlash, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnStar, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jNum0, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnEquals, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jNum2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jBtnPrev, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnC, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jBtnDas, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jBtnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioOff)
                                .addComponent(jRadioOn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBtnC, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnPlus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioOn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioOff)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnStar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNum7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnSlash, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jNum0, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnDot, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnEquals, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldActionPerformed

    private void jNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum1ActionPerformed
        textField.setText(textField.getText() + "1");
    }//GEN-LAST:event_jNum1ActionPerformed

    private void jNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum2ActionPerformed
        textField.setText(textField.getText() + "2");
    }//GEN-LAST:event_jNum2ActionPerformed

    private void jNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum3ActionPerformed
        textField.setText(textField.getText() + "3");
    }//GEN-LAST:event_jNum3ActionPerformed

    private void jNum4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum4ActionPerformed
        textField.setText(textField.getText() + "4");
    }//GEN-LAST:event_jNum4ActionPerformed

    private void jNum5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum5ActionPerformed
        textField.setText(textField.getText() + "5");
    }//GEN-LAST:event_jNum5ActionPerformed

    private void jNum6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum6ActionPerformed
        textField.setText(textField.getText() + "6");
    }//GEN-LAST:event_jNum6ActionPerformed

    private void jNum7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum7ActionPerformed
        textField.setText(textField.getText() + "7");
    }//GEN-LAST:event_jNum7ActionPerformed

    private void jNum8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum8ActionPerformed
        textField.setText(textField.getText() + "8");
    }//GEN-LAST:event_jNum8ActionPerformed

    private void jNum9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum9ActionPerformed
        textField.setText(textField.getText() + "9");
    }//GEN-LAST:event_jNum9ActionPerformed

    private void jNum0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNum0ActionPerformed
        textField.setText(textField.getText() + "0");
    }//GEN-LAST:event_jNum0ActionPerformed

    private void jBtnPlusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPlusActionPerformed
        textField.setText(textField.getText() + "+");

    }//GEN-LAST:event_jBtnPlusActionPerformed

    private void jBtnDasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDasActionPerformed
        textField.setText(textField.getText() + "-");
    }//GEN-LAST:event_jBtnDasActionPerformed

    private void jBtnStarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnStarActionPerformed
        textField.setText(textField.getText() + "*");
    }//GEN-LAST:event_jBtnStarActionPerformed

    private void jBtnSlashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSlashActionPerformed
        textField.setText(textField.getText() + "/");
    }//GEN-LAST:event_jBtnSlashActionPerformed

    private void jBtnDotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDotActionPerformed
        textField.setText(textField.getText() + ".");
    }//GEN-LAST:event_jBtnDotActionPerformed

    private void jBtnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCActionPerformed
        textField.setText("");
    }//GEN-LAST:event_jBtnCActionPerformed

    private void jRadioOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioOffActionPerformed
        disable();
        textField.setText("");
    }//GEN-LAST:event_jRadioOffActionPerformed

    private void jRadioOnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioOnActionPerformed
        enable();

    }//GEN-LAST:event_jRadioOnActionPerformed

    private void jBtnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPrevActionPerformed
        int length = textField.getText().length();
        int number = textField.getText().length() - 1;
        String store;
        if (length > 0) {
            StringBuilder back = new StringBuilder(textField.getText());
            back.deleteCharAt(number);
            store = back.toString();
            textField.setText(store);
        }

    }//GEN-LAST:event_jBtnPrevActionPerformed

    private void jBtnEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEqualsActionPerformed
//        arithmetic_operation();
//        num = Double.parseDouble(textField.getText());
        history = textField.getText();
        history2 = history2 + "|" + history;
        jLabel1.setText(history2 + "");

        textField.setText("");
        history = "";

        CalDemo.solve_this(history);
        ByteArrayOutputStream stream = new ByteArrayOutputStream();
//        String finalString = new String(CalDemo.toByteArray());
        answer = "";
        textField.setText(history);


    }//GEN-LAST:event_jBtnEqualsActionPerformed
    double num, ans;
    int calculation;
    String history, history2 = "", answer;

    public void arithmetic_operation() {
        switch (calculation) {
            case 1: //addition
                ans = num + Double.parseDouble(textField.getText());
                textField.setText(Double.toString(ans));
                break;
            case 2: //addition
                ans = num + Double.parseDouble(textField.getText());
                textField.setText(Double.toString(ans));
                break;
            case 3: //addition
                ans = num + Double.parseDouble(textField.getText());
                textField.setText(Double.toString(ans));
                break;
            case 4: //addition
                ans = num + Double.parseDouble(textField.getText());
                textField.setText(Double.toString(ans));
                break;
            case 5: //addition
                ans = num + Double.parseDouble(textField.getText());
                textField.setText(Double.toString(ans));
                break;
        }
    }

    public void disable() {
        textField.setEnabled(false);
        jRadioOn.setEnabled(true);
        jRadioOff.setEnabled(false);

        jNum1.setEnabled(false);
        jNum2.setEnabled(false);
        jNum3.setEnabled(false);
        jNum4.setEnabled(false);
        jNum5.setEnabled(false);
        jNum6.setEnabled(false);
        jNum7.setEnabled(false);
        jNum8.setEnabled(false);
        jNum9.setEnabled(false);
        jNum0.setEnabled(false);
        jBtnC.setEnabled(false);
        jBtnDot.setEnabled(false);
        jBtnSlash.setEnabled(false);
        jBtnDas.setEnabled(false);
        jBtnPlus.setEnabled(false);
        jBtnEquals.setEnabled(false);
        jBtnStar.setEnabled(false);
        jBtnPrev.setEnabled(false);
    }

    public void enable() {
        textField.setEnabled(true);
        jRadioOn.setEnabled(false);
        jRadioOff.setEnabled(true);
        jNum1.setEnabled(true);
        jNum2.setEnabled(true);
        jNum3.setEnabled(true);
        jNum4.setEnabled(true);
        jNum5.setEnabled(true);
        jNum6.setEnabled(true);
        jNum7.setEnabled(true);
        jNum8.setEnabled(true);
        jNum9.setEnabled(true);
        jNum0.setEnabled(true);
        jBtnC.setEnabled(true);
        jBtnDot.setEnabled(true);
        jBtnSlash.setEnabled(true);
        jBtnDas.setEnabled(true);
        jBtnPlus.setEnabled(true);
        jBtnEquals.setEnabled(true);
        jBtnStar.setEnabled(true);
        jBtnPrev.setEnabled(true);
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnC;
    private javax.swing.JButton jBtnDas;
    private javax.swing.JButton jBtnDot;
    private javax.swing.JButton jBtnEquals;
    private javax.swing.JButton jBtnPlus;
    private javax.swing.JButton jBtnPrev;
    private javax.swing.JButton jBtnSlash;
    private javax.swing.JButton jBtnStar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton jNum0;
    private javax.swing.JButton jNum1;
    private javax.swing.JButton jNum2;
    private javax.swing.JButton jNum3;
    private javax.swing.JButton jNum4;
    private javax.swing.JButton jNum5;
    private javax.swing.JButton jNum6;
    private javax.swing.JButton jNum7;
    private javax.swing.JButton jNum8;
    private javax.swing.JButton jNum9;
    private javax.swing.JRadioButton jRadioOff;
    private javax.swing.JRadioButton jRadioOn;
    private javax.swing.ButtonGroup powerSwitch;
    private javax.swing.JTextField textField;
    // End of variables declaration//GEN-END:variables
}

class CalDemo {

    public static int solve_this(String expression) {
        char[] ar_tok = expression.toCharArray();
// This is the Stack for numbers, our values
        Stack<Integer> values = new Stack<Integer>();
// This Stack is for our Operators called 'sta_obj' 
        Stack<Character> sta_obj = new Stack<Character>();
        for (int i = 0; i < ar_tok.length; i++) {
// Our present token is a whitespace? so skip it
            if (ar_tok[i] == ' ') {
                continue;
            }
// Our token is a number? push it onto the stack for numbers 
            if (ar_tok[i] >= '0' && ar_tok[i] <= '9') {
                StringBuffer buff_s = new StringBuffer();
// Incase the number has more than one digit
                while (i < ar_tok.length && ar_tok[i] >= '0' && ar_tok[i] <= '9') {
                    buff_s.append(ar_tok[i++]);
                }
                values.push(Integer.parseInt(buff_s.toString()));
            } // Our token is an opening bracket? push it onto 'sta_obj' 
            else if (ar_tok[i] == '(') {
                sta_obj.push(ar_tok[i]);
            } // Once we meet the closing bracket , solve the complete bracket 
            else if (ar_tok[i] == ')') {
                while (sta_obj.peek() != '(') {
                    values.push(applyOp(sta_obj.pop(), values.pop(), values.pop()));
                }
                sta_obj.pop();
            } // Incase the token is an operator 
            else if (ar_tok[i] == '+' || ar_tok[i] == '-'
                    || ar_tok[i] == '*' || ar_tok[i] == '/') {
// While top of 'sta_obj' has same or greater precedence to current 
// token, which is an operator. Apply operator on top of 'sta_obj' 
// to bring on top two elements in the values stack.
                while (!sta_obj.empty() && hasPrecedence(ar_tok[i], sta_obj.peek())) {
                    values.push(applyOp(sta_obj.pop(), values.pop(), values.pop()));
                }
// Pushing the token onto 'sta_obj'. 
                sta_obj.push(ar_tok[i]);
            }
        }
// Now that the expression is parsed, we'll use the rest of
// sta_obj for the remaining values 
        while (!sta_obj.empty()) {
            values.push(applyOp(sta_obj.pop(), values.pop(), values.pop()));
        }
// If the top of 'values' has the result, simply return it 
        return values.pop();
    }
// True is returned if 'oper_2' has higher or same precedence as 'oper_1', 
// else false is returned 

    public static boolean hasPrecedence(char oper_1, char oper_2) {
        if (oper_2 == '(' || oper_2 == ')') {
            return false;
        }
        if ((oper_1 == '*' || oper_1 == '/') && (oper_2 == '+' || oper_2 == '-')) {
            return false;
        } else {
            return true;
        }
    }

    // Here's a utility method for applying an operator 'oper' on the operands 'var1' and 'var2' 
    public static int applyOp(char oper, int var2, int var1) {
        switch (oper) {
            case '+':
                return var1 + var2;
            case '-':
                return var1 - var2;
            case '*':
                return var1 * var2;
            case '/':
                if (var2 == 0) {
                    throw new ArithmeticException("division by zero.. immpossible!");
                }
                return var1 / var2;
        }
        return 0;
    }

// Main section 
    public static void main(String[] args) {
        System.out.println("******OUTPUTS******");
        System.out.println(CalDemo.solve_this("50 + 5 * (70/70)"));
//System.out.println(BOD_Calc.solve_this("50 + 5 * 70/70")); 
//System.out.println(BOD_Calc.solve_this("100 + 5 * 30")); 
//System.out.println(BOD_Calc.solve_this("100 * ( 5 + 30 ) "));
//System.out.println(BOD_Calc.solve_this("100 / 0"));
    }
}
